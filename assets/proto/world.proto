syntax = "proto3";

// 大地图协议
package world;

// 约定结构
// id 特指单位的唯一id

// 玩家基本信息
message Role {
    uint32 rid = 1;
    string name = 2;
    uint32 aid = 3;
}

message Position {
    float x = 1;
    float y = 2;
}

// 同盟基本信息
message Alliance {
  uint32 aid = 1;
  string name = 3;
}

message TroopComponent {
    uint32 hero_id = 1;
    uint32 soldier_id = 2; // 士兵id
    uint32 cmd = 3; // 当前执行指令
    uint32 inside_eid = 4; // 当前所处建筑
    uint32 home_eid = 5; // 归属建筑
    uint32 battle_eid = 6; // 正在参与的战斗
    uint32 max_hp = 7; // 最大血量
    uint32 hp = 8; // 当前血量
    uint32 state = 9; // 当前状态
};

message OwnerComponent {
    uint32 rid = 1;
    uint32 aid = 2;
    uint32 eid = 3;
    bool is_robot = 4;
    string role_name = 5;
    string alliance_name = 6;
}

message Timer {
    uint32 type = 1;
    uint32 start = 2; // 开始时间戳(ms)
    uint32 expire = 3; // 结束时间戳(ms)
}
message TimerComponent {
    map<uint32, Timer> timers = 1;
}

// speed > 0 在移动 #path > 0 在寻路 否则摇杆
message MoveComponent {
    uint32 start_ms = 2;
    repeated Position path = 3;
    float speed = 4; // 每秒多少格
    float degree = 5;
}

message BuildingComponent {
    uint32 bid = 1; // 建筑id
    uint32 hp = 2; // 当前耐久
    uint32 max_hp = 3; // 最大耐久
    uint32 auto_hp_ms = 4; // 上次自动回复时间戳
    int32 auto_hp = 5; // 自动回复耐久值(可以为负)
    uint32 auto_hp_inr = 6; // 自动回复耐久间隔
    string name = 9; // 自定义名字
}

message BattleComponent {
    uint32 battle_uid = 1;
    repeated uint32 fighter_eids = 2; // 参战方
    uint32 start_ts = 3; // 开始时间戳
}

message BagItem {
    uint32 id = 1;
    uint32 num = 2;
}

message BagComponent {
    repeated BagItem items = 1;
    uint32 touch_eid = 2; // 与某个实体交互
}

message ItemComponent {
    uint32 id = 1;
    uint32 num = 2;
}

// 单位定义
message Entity {
    uint32 eid = 1;
    uint32 etype = 2;

    Position pos = 3;
    TimerComponent timer = 12;
    MoveComponent move = 13;
    BuildingComponent building = 14;
    OwnerComponent owner = 15;
    TroopComponent troop = 16;
    BattleComponent battle = 17;
    BagComponent bag = 18;
    ItemComponent item = 19;
}

// 加载地图数据
message c2s_load {
    uint32 world_uid = 1; // 地图唯一id
}
message s2c_load {
    uint32 err = 1;
    uint32 map_id = 2;
    uint32 home_eid = 3; // 我的主城id
    Position home_pos = 4; // 我的主城位置
}

// 客户端视口变更(如果world_uid改变了，会自动离开原地图)
message c2s_change_viewport {
    uint32 world_uid = 1;
    Position pos = 2; // 视口中心点坐标，每格的大小在config/world.lua中配置
}
message s2c_change_viewport {
    uint32 err = 1;
}

message c2s_giveup {
    uint32 eid = 1;
}
message s2c_giveup {
    uint32 err = 1;
}

message c2s_cancel_giveup {
    uint32 eid = 2;
}
message s2c_cancel_giveup {
    uint32 err = 1;
}

message c2s_load_detect_info {
    Position pos = 1;
}
message s2c_load_detect_info {
    uint32 err = 1;
    uint32 dungeon_id = 2; // 副本id
    uint32 alive_count = 3; // 存活队伍数量
}

// 点击移动
message c2s_troop_move_to {
    uint32 troop_eid = 1;
    Position dst_pos = 2;
}
message s2c_troop_move_to {
    uint32 err = 1;
}

// 摇杆移动
message c2s_troop_move_by {
    uint32 troop_eid = 1;
    float degree = 2;
}
message s2c_troop_move_by {
    uint32 err = 1;
}

message c2s_troop_move_stop {
    uint32 troop_eid = 1;
}
message s2c_troop_move_stop {
    uint32 err = 1;
}

message c2s_troop_retreat {
    uint32 troop_eid = 1;
}
message s2c_troop_retreat {
    uint32 err = 1;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 服务主动推送
// 同一帧内，发送的顺序为: notify_alliances -> notify_roles -> notify_entities

message notify_alliances {
    repeated Alliance alliances = 1;
}

message notify_roles {
    repeated Role roles = 1;
}

message AddEntityAction {
    Entity entity = 1;
}
message DelEntityAction {
    uint32 eid = 1;
}
message MoveAction {
    uint32 eid = 1;
    repeated Position path = 2;
    uint32 speed = 3;
    uint32 start_ms = 4;
    Position cur_pos = 5;
    float degree = 6;
}

message StartBattleAction {
    uint32 battle_uid = 1;
    repeated uint32 troop_eids = 2;
}

message LeaveBattleAction {
    uint32 battle_uid = 1;
    repeated uint32 troop_eids = 2;
}

message StopBattleAction {
    uint32 battle_uid = 1;
    repeated uint32 troop_eids = 2;
}

message EntityAction {
    uint32 action = 1;

    AddEntityAction add_entity = 10;
    DelEntityAction del_entity = 11;
    MoveAction move = 12;

    StartBattleAction start_battle = 21;
    LeaveBattleAction leave_battle = 22;
    StopBattleAction stop_battle = 23;
}

// 单位同步(最基层)
message notify_entities {
    repeated Entity enter_list = 3; // 进入视野
    repeated uint32 leave_list = 4; // 离开视野
}

// 同步单位行动
message notify_actions {
    repeated EntityAction actions = 1;    
}


// 同步战斗结果
message notify_battle_result {
    uint32 src_eid = 1; // 进攻方id
    uint32 dst_eid = 2; // 防守方id
    uint32 result = 3; // config/world.lua BattleResult
}

// 同步占据结果
message notify_occupy_result {
    uint32 type = 1; // config/world.lua OccupyType
    uint32 aid = 2; // 同盟id
    uint32 bid = 3; // 建筑id
    uint32 eid = 4; // 系统城eid
}

